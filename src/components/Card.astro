---
interface Props {
	title: string;
	body: string;
	href?: string;
}

const { href, title, body } = Astro.props;
---

<li class="link-card">
	{
		href ? (
			<a href={href} class="card-main">
				<h2 class="card-title">
					{title}
					<span class="card-arrow">&rarr;</span>
				</h2>
				<p>{body}</p>
			</a>
		) : (
			<div class="card-main">
				<h2 class="card-title">
					{title}
					<span class="card-arrow">&rarr;</span>
				</h2>
				<p>{body}</p>
			</div>
		)
	}
</li>
<style>
	.link-card {
		list-style: none;
		display: flex;
		padding: 1px;
		background-color: #23262d;
		background-image: none;
		background-size: 400%;
		border-radius: 7px;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
	}
	h2 {
		display: inline-block;
		margin-right: 0.5em;
		transition: transform 0.3s ease-in-out;
	}
	.link-card > .card-main {
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: calc(1.5rem - 1px);
		border-radius: 8px;
		color: white;
		background-color: #23262d;
		opacity: 0.8;
		transition: all 0.3s ease-in-out;
	}
	.card-arrow {
		display: inline-block;
		transform: translateX(3px);
		transition: transform 0.3s ease-in-out;
	}
	p {
		margin-top: 0.5rem;
		margin-bottom: 0;
	}
	.link-card:hover .card-arrow {
		transform: translateX(10px);
	}
	.link-card:is(:hover, :focus-within) {
		background-position: 0;
		background-image: var(--accent-gradient);
	}
	.link-card:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent-light));
	}
</style>
