---
import type { IModule } from "../../utils/types/ClientInfo";
import Module from "../ClickGUI/Module.astro";

interface Props {
	name: string;
	modules?: Map<string, IModule>;
}

const { name, modules } = Astro.props;
const tabId = `${name}-tab`;
---

<div id={tabId} class="tab" data-open="false">
	<div class="tab-header">
		<span class="tab-title">{name}</span>
		<span class="tab-open-indicator">+</span>
	</div>
	<div class="tab-content">
		{
			Array.from(modules || []).map(([name, mod]) => (
				<Module
					name={name}
					description={mod.description}
					settings={mod.settings}
				/>
			))
		}
	</div>
</div>
<style>
	.tab {
		width: 200px;
		border: 2px solid blue;
		border-radius: 5px;
		margin-right: 5px;
		margin-bottom: 10px;
	}
	.tab[data-open="false"] > .tab-header > .tab-open-indicator {
		color: green;
	}
	.tab[data-open="false"] > .tab-content {
		display: none;
	}
	.tab[data-open="true"] > .tab-header > .tab-open-indicator {
		color: red;
	}
	.tab-header {
		display: flex;
		align-items: center;
		justify-content: space-between;
		height: 30px;
	}
	.module-header {
		padding-top: 3px;
		padding-bottom: 3px;
		display: flex;
		justify-content: space-between;
		align-items: center;
		transition: 0.25s ease-in-out;
	}
	.tab[data-open="true"] > .tab-header > .tab-open-indicator {
		color: red;
	}
	.tab[data-open="false"] > .tab-header > .tab-open-indicator {
		color: green;
	}
	.tab-open-indicator {
		float: right;
	}
	@font-face {
		font-family: "Gotham SSM Book";
		src: url("/fonts/GothamSSm-Book.otf") format("opentype");
		src: url("/fonts/GothamSSm-Book.ttf") format("truetype");
	}
	.tab-title {
		font-size: 20px;
		text-align: center;
		margin-left: 8px;
		color: rgb(255, 255, 255);
		font-family: "Gotham SSM Book";
	}
</style>
<script>
	const tabs = document.querySelectorAll("div.tab");
	tabs.forEach(tab => {
		tab.querySelector(".tab-header")!.addEventListener("click", () => {
			handleClick(tab as HTMLDivElement);
		});
	});
	const handleClick = (tab: HTMLDivElement) => {
		const openIndicator = tab.querySelector(
			".tab-open-indicator"
		) as HTMLSpanElement;
		const content = (tab.querySelector(".tab-content") as HTMLDivElement)!;
		const currentState = JSON.parse(tab.dataset.open!);
		const newState = !currentState;
		openIndicator.textContent = newState ? "-" : "+";
		tab.dataset.open = JSON.stringify(newState);
		// openIndicator.style.color = newState ? "red" : "green";
		// content.style.display = newState ? "" : "none";
	};
</script>
